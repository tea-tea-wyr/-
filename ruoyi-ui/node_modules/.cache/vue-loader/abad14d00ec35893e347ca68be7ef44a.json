{"remainingRequest":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\src\\views\\system\\act\\origin_act_index.vue?vue&type=template&id=60b387c2&","dependencies":[{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\src\\views\\system\\act\\origin_act_index.vue","mtime":1610278952655},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}