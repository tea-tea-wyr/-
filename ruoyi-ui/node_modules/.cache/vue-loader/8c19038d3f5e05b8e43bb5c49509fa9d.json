{"remainingRequest":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\src\\views\\index.vue?vue&type=template&id=a83bd3b0&scoped=true&","dependencies":[{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\src\\views\\index.vue","mtime":1610278952617},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\GitHub-fork\\Background-management-system-of-campus-activities\\ruoyi-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}